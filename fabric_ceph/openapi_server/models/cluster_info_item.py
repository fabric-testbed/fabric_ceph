from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from fabric_ceph.openapi_server.models.base_model import Model
from fabric_ceph.openapi_server.models.cluster_info_item_mons_inner import ClusterInfoItemMonsInner
from fabric_ceph.openapi_server import util

from fabric_ceph.openapi_server.models.cluster_info_item_mons_inner import ClusterInfoItemMonsInner  # noqa: E501

class ClusterInfoItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster=None, fsid=None, mons=None, mon_host=None, ceph_conf_minimal=None, error=None):  # noqa: E501
        """ClusterInfoItem - a model defined in OpenAPI

        :param cluster: The cluster of this ClusterInfoItem.  # noqa: E501
        :type cluster: str
        :param fsid: The fsid of this ClusterInfoItem.  # noqa: E501
        :type fsid: str
        :param mons: The mons of this ClusterInfoItem.  # noqa: E501
        :type mons: List[ClusterInfoItemMonsInner]
        :param mon_host: The mon_host of this ClusterInfoItem.  # noqa: E501
        :type mon_host: str
        :param ceph_conf_minimal: The ceph_conf_minimal of this ClusterInfoItem.  # noqa: E501
        :type ceph_conf_minimal: str
        :param error: The error of this ClusterInfoItem.  # noqa: E501
        :type error: str
        """
        self.openapi_types = {
            'cluster': str,
            'fsid': str,
            'mons': List[ClusterInfoItemMonsInner],
            'mon_host': str,
            'ceph_conf_minimal': str,
            'error': str
        }

        self.attribute_map = {
            'cluster': 'cluster',
            'fsid': 'fsid',
            'mons': 'mons',
            'mon_host': 'mon_host',
            'ceph_conf_minimal': 'ceph_conf_minimal',
            'error': 'error'
        }

        self._cluster = cluster
        self._fsid = fsid
        self._mons = mons
        self._mon_host = mon_host
        self._ceph_conf_minimal = ceph_conf_minimal
        self._error = error

    @classmethod
    def from_dict(cls, dikt) -> 'ClusterInfoItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ClusterInfoItem of this ClusterInfoItem.  # noqa: E501
        :rtype: ClusterInfoItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster(self) -> str:
        """Gets the cluster of this ClusterInfoItem.


        :return: The cluster of this ClusterInfoItem.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster: str):
        """Sets the cluster of this ClusterInfoItem.


        :param cluster: The cluster of this ClusterInfoItem.
        :type cluster: str
        """

        self._cluster = cluster

    @property
    def fsid(self) -> str:
        """Gets the fsid of this ClusterInfoItem.


        :return: The fsid of this ClusterInfoItem.
        :rtype: str
        """
        return self._fsid

    @fsid.setter
    def fsid(self, fsid: str):
        """Sets the fsid of this ClusterInfoItem.


        :param fsid: The fsid of this ClusterInfoItem.
        :type fsid: str
        """

        self._fsid = fsid

    @property
    def mons(self) -> List[ClusterInfoItemMonsInner]:
        """Gets the mons of this ClusterInfoItem.


        :return: The mons of this ClusterInfoItem.
        :rtype: List[ClusterInfoItemMonsInner]
        """
        return self._mons

    @mons.setter
    def mons(self, mons: List[ClusterInfoItemMonsInner]):
        """Sets the mons of this ClusterInfoItem.


        :param mons: The mons of this ClusterInfoItem.
        :type mons: List[ClusterInfoItemMonsInner]
        """

        self._mons = mons

    @property
    def mon_host(self) -> str:
        """Gets the mon_host of this ClusterInfoItem.


        :return: The mon_host of this ClusterInfoItem.
        :rtype: str
        """
        return self._mon_host

    @mon_host.setter
    def mon_host(self, mon_host: str):
        """Sets the mon_host of this ClusterInfoItem.


        :param mon_host: The mon_host of this ClusterInfoItem.
        :type mon_host: str
        """

        self._mon_host = mon_host

    @property
    def ceph_conf_minimal(self) -> str:
        """Gets the ceph_conf_minimal of this ClusterInfoItem.


        :return: The ceph_conf_minimal of this ClusterInfoItem.
        :rtype: str
        """
        return self._ceph_conf_minimal

    @ceph_conf_minimal.setter
    def ceph_conf_minimal(self, ceph_conf_minimal: str):
        """Sets the ceph_conf_minimal of this ClusterInfoItem.


        :param ceph_conf_minimal: The ceph_conf_minimal of this ClusterInfoItem.
        :type ceph_conf_minimal: str
        """

        self._ceph_conf_minimal = ceph_conf_minimal

    @property
    def error(self) -> str:
        """Gets the error of this ClusterInfoItem.


        :return: The error of this ClusterInfoItem.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error: str):
        """Sets the error of this ClusterInfoItem.


        :param error: The error of this ClusterInfoItem.
        :type error: str
        """

        self._error = error
